public class Solution {
    //hohoho,just kidding...... 76 ms
    // public int reverse(int x) {
    //     String a = String.valueOf(x);
    //     Boolean is_negative = false;
    //     if(a.startsWith("-")){
    //         a = a.replace("-","");    
    //         is_negative = true;
    //     }
    //     int result = 0;
    //     char[] a_c = a.toCharArray();
    //     StringBuffer s = new StringBuffer();
    //     for(int i = a_c.length - 1; i >= 0 ; i--){
    //       s.append(a_c[i]); 
    //     }
    //     System.out.println(s);
    //     try{
    //         result = Integer.parseInt(s.toString());
    //         if(is_negative){
    //             result = 0 - result;
    //         }
    //     }catch(Exception e){
    //         e.printStackTrace();
    //         return 0;
    //     }
    //     return result;
    // }
    //72ms too slow...
    // public int reverse(int x) {
    //     int result = 0;
    //     long temp = 0l;
    //     Boolean is_negative = false;
    //         double test = Math.pow(2,31)-1;//有符号数最大值，无符号数最大值 为2^32-1
    //     if(x < 0){
    //         is_negative = true;
    //         x = 0 - x;
    //     } 
    //     List<Integer> list = new ArrayList<Integer>();
    //     for(int i = 0; Math.pow(10,i) <= x; i++){
    //         list.add((int)(x%Math.pow(10,(i+1))/Math.pow(10,i)));
    //     }
         
    //     for(int i = list.size()-1,j=0; i >=0 && j < list.size(); i--,j++){
    //         temp += Math.pow(10,i)*list.get(j);
    //         System.out.println("i:"+i+",temp:"+temp);
    //         if(temp > test){
    //              return 0;
    //         }
    //     }
        
    //     result = Integer.parseInt(String.valueOf(temp));
        
    //     if(is_negative){
    //         result = 0 - result;
    //     }
    //     return result;
    // }
    //59ms...
    public int reverse(int x) {
        int result = 0;
        Boolean is_negative = false;
        double test = Math.pow(2,31)-1;//有符号数最大值，无符号数最大值 为2^32-1
        if(x < 0){
            is_negative = true;
            x = 0 - x;
        } 
        
        for(int i = 0; Math.pow(10,i) <= x; i++){
            
            int y =(int)(x%Math.pow(10,(i+1))/Math.pow(10,i));
            
            if(result > (test-y)/10){
                 return 0;
            }else{
                 result = (int)(result*10+y);
            }
           
        }
        
        if(is_negative){
            result = 0 - result;
        }
        return result;
    }
}
